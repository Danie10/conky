--[[
Conky, a system monitor, based on torsmo

Any original torsmo code is licensed under the BSD license

All code written since the fork of torsmo is licensed under the GPL

Please see COPYING for details

Copyright (c) 2004, Hannu Saransaari and Lauri Hakkarainen
Copyright (c) 2005-2019 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)
All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

NOTE: Using nvidia-smi now to probe GPU details
]]

conky.config = {
    alignment = 'top_left',
    background = false,
    border_width = 1,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'DejaVu Sans Mono:size=12',
    gap_x = 40,
    gap_y = 60,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'normal',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 3.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
${font Good Times:size=12}${color Tan1}INFO ${font}$color ${scroll 32 Conky ${exec conky -V} - $sysname $kernel $machine}
$hr
${color grey}Uptime:$color $uptime
${color grey}Window Manager:$color $XDG_SESSION_TYPE
${color grey}RAM Usage:$color $mem/$memmax - $memperc% ${membar 4}
${color grey}Swap Usage:$color $swap/$swapmax - $swapperc% ${swapbar 4}
# Zram0 is usually the /dev/zram0 for Zram, if not used, comment out following line
${color grey}Zram Usage: $color ${exec zramctl --raw --noheadings --output TOTAL}/${exec zramctl --raw --noheadings --output DISKSIZE}
$hr
${font Good Times:size=12}${color Tan1}CPU ${font}$color $alignr${execi 1000 cat /proc/cpuinfo | grep 'model name' | sed -e 's/model name.*: //'| uniq}
# Tests if CPU temp greater or less than value and changes color
${color grey}Temperature:\
${if_match "${exec sensors | grep 'Tctl' | cut -c16-19}" >="75"}${color red}\
    ${else}${if_match "${exec sensors | grep 'Tctl' | cut -c16-19}" <"75"}${color green}${endif}\
${endif}\
$alignr${exec sensors | grep 'Tctl' | cut -c16-19}°C
${color grey}Usage:$color $cpu% ${cpubar 4}
${color grey}Fan:  $color $alignr ${exec sensors | grep 'fan1' | cut -c13-21}
$hr
${font Good Times:size=12}${color Tan1}GPU ${font}$color $alignr ${exec nvidia-smi --query-gpu=name --format=csv,noheader,nounits}
# Tests if GPU temp greater or less than value and changes color
${color grey}Temperature:\
${if_match "${exec nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits}" >="75"}${color red}\
    ${else}${if_match "${exec nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits}" <"75"}${color green}${endif}\
${endif}\
$alignr${exec nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits} °C
${color grey}Throttle at:$color $alignr ${exec nvidia-smi -q -d temperature | grep "GPU Slowdown Temp" | awk '{print $5}'} °C
${color grey}GPU Usage: $color $alignr ${exec nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits} %
${color grey}Mem Usage: $color $alignr ${exec nvidia-smi --query-gpu=utilization.memory --format=csv,noheader,nounits} %
${color grey}Fan speed: $color $alignr ${exec nvidia-smi --query-gpu=fan.speed --format=csv,noheader,nounits} RPM
${color grey}Performance State: $color $alignr ${exec nvidia-smi --query-gpu=pstate --format=csv,noheader,nounits}
${color grey}Power Draw: $color $alignr ${exec nvidia-smi --query-gpu=power.draw --format=csv,noheader,nounits} W
#${color grey}Performance Level: $color $alignr ${nvidia perflevelcur} # Stopped working
# ${color grey}Power mode: $color $alignr ${exec nvidia perfmode} # Stopped working
$hr
${font Good Times:size=12}${color Tan1}CHASSIS FANS ${font}
${color grey}Front Fan:$color $alignr ${exec sensors | grep 'fan2' | cut -c13-21}
${color grey}Rear Fan: $color $alignr ${exec sensors | grep 'fan3' | cut -c13-21}
$hr
${font Good Times:size=12}${color Tan1}FILE SYSTEMS FREE SPACE ${font}
${color grey}Linux Boot $color${fs_free /} of ${fs_size /} ${fs_bar 6 /}
${color grey}Home       $color${fs_free /home} of ${fs_size /home} ${fs_bar 6 /home}
${color grey}Win Boot   $color${fs_free /run/media/danie/Winboot} of ${fs_size /run/media/danie/Winboot} ${fs_bar 6 /run/media/danie/Winboot} 
${color grey}Win D      $color${fs_free /run/media/danie/WinD} of ${fs_size /run/media/danie/WinD} ${fs_bar 6 /run/media/danie/WinD} 
${color grey}Backup     $color${fs_free /run/media/danie/LinuxBackup} of ${fs_size /run/media/danie/LinuxBackup} ${fs_bar 6 /run/media/danie/LinuxBackup}
 $hr
${font Good Times:size=12}${color Tan1}NETWORKING ${font}
${if_existing /sys/class/net/enp4s0/operstate up}\
${color #0077ff}Net Down:$color ${downspeed enp4s0} $alignr${color #0077ff}Net Up:$color ${upspeed enp4s0}
${color #0077ff}${downspeedgraph enp4s0 32,155 104E8B 0077ff} $alignr${color #0077ff}${upspeedgraph enp4s0 32,155 104E8B 0077ff}\
${endif}$color
$hr
${font Good Times:size=12}${color Tan1}TOP PROCESSES ${font}
${color grey}Name               PID      CPU%   MEM%
 ${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${color lightgrey} ${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${color lightgrey} ${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${color lightgrey} ${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}
]]
